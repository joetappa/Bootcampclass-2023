## Essential Linux Commands## 

1. File Operations:
 ● ls: Lists all files and directories in the present working
 directory
 ● ls-R: Lists files in sub-directories as well
 ● ls-a: Shows hidden files
 ● ls-al: Lists files and directories with detailed information like
 permissions, size, owner, etc.
 ● cd directoryname: Changes the directory
 ● cd ..: Moves one level up
 ● pwd: Displays the present working directory
 ● cat > filename: Creates a new file
 ● cat filename: Displays the file content
 ● cat file1 file2 > file3: Joins two files (file1 and file2) and stores
 the output in a new file (file3)
 ● touch filename: Creates or modifies a file
 ● rm filename: Deletes a file
 ● cp source destination: Copies files from the source path to the
 destination path
 ● mv source destination: Moves files from the source path to the
 destination path
 ● find /-name filename: Finds a file or a directory by its name
 starting from root
 ● file filename: Determines the file type
 ● less filename: Views the file content page by page
 ● head filename: Views the first ten lines of a file
 ● tail filename: Views the last ten lines of a file
 ● lsof: Shows which files are opened by which process.
 ● du-h--max-depth=1: Shows the size of each directory. Use--max-depth=1 to limit the output to the current directory and its
 immediate children.
 ● fdisk: Disk partition manipulation command.


2. Directory Operations:
 ● mkdir directoryname: Creates a new directory in the present
 working directory
 ● rmdir directoryname: Deletes a directory
 ● cp-r source destination: Copies directories recursively
 ● mv olddir newdir: Renames directories
 ● find /-type d-name directoryname: Finds a directory starting from
 root
 
3. Process Operations:
 ● ps: Displays your currently active processes
 ● top: Displays all running processes
 ● kill pid: Kills the process with given pid
 ● pkill name: Kills the process with the given name
 ● bg: Resumes suspended jobs without bringing them to foreground
 ● fg: Brings the most recent job to foreground
 ● fg n: Brings job n to the foreground
 ● renice +n [pid]: Change the priority of a running process.
 ● &>filename: Redirects both the stdout and the stderr to the file
 f
 ilename.
 ● 1>filename: Redirect the stdout to file filename.
 ● 2>filename: Redirect stderr to file filename.
 
4. File Permissions:
 ● chmod octal filename: Change the permissions of file to octal,
 which can be between 0 (no permissions) to 7 (full permissions)
 ● chown ownername filename: Change file owner
 ● chgrp groupname filename: Change group owner


5. Networking:
 ● ping host: Ping a host and outputs results
 ● whois domain: Get whois information for domain
 ● dig domain: Get DNS information for domain
 ● netstat-pnltu: Display various network related information such
 as network connections, routing tables, interface statistics etc.
 ● ifconfig: Displays IP addresses of all network interfaces
 ● ssh user@host: Remote login into the host as user
 ● scp: Transfers files between hosts over ssh
 ● wget url: Download files from the web
 ● curl url: Sends a request to a URL and returns the response
 ● traceroute domain: Prints the route that a packet takes to reach
 the domain.
 ● mtr domain: mtr combines the functionality of the traceroute and
 ping programs in a single network diagnostic tool.
 ● ss: Another utility to investigate sockets. It's a more modern
 alternative to netstat.
 ● nmap: Network exploration tool and security scanner.

6. Archives and Compression:
 ● tar cf file.tar files: Create a tar named file.tar containing files
 ● tar xf file.tar: Extract the files from file.tar
 ● gzip file: Compresses file and renames it to file.gz
 ● gzip-d file.gz: Decompresses file.gz back to file
 ● zip-r file.zip files: Create a zip archive named file.zip
 ● unzip file.zip: Extract the contents of a zip file
 
7. Text Processing:
 ● grep pattern files: Search for pattern in files
 ● grep-r pattern dir: Search recursively for pattern in dir
● command | grep pattern: Pipe the output of command to grep for
 searching
 ● echo 'text': Prints text
 ● sed 's/string1/string2/g' filename: Replaces string1 with string2
 in filename
 ● diff file1 file2: Compares two files and shows the differences
 ● wc filename: Count lines, words, and characters in a file
 ● awk: A versatile programming language for working on files.
 ● sed-i 's/string1/string2/g' filename: Replace string1 with string2
 in filename. The-i option edits the file in-place.
 ● cut-d':'-f1 /etc/passwd: Cut out the first field of each line in
 /etc/passwd, using colon as a field delimiter.
 
8. Disk Usage:
 ● df: Shows disk usage
 ● du: Shows directory space usage
 ● free: Show memory and swap usage
 ● whereis app: Show possible locations of app

9. System Info:
 ● date: Show the current date and time
 ● cal: Show this month's calendar
 ● uptime: Show current uptime
 ● w: Display who is online
 ● whoami: Who you are logged in as
 ● uname-a: Show kernel information
 ● df-h: Disk usage in human readable format
 ● du-sh: Disk usage of current directory in human readable format
 ● free-m: Show free and used memory in MB
 

10. Package Installations:
 ● sudo apt-get update: Updates package lists for upgrades
 ● sudo apt-get upgrade: Upgrades all upgradable packages
 ● sudo apt-get install pkgname: Install pkgname
 ● sudo apt-get remove pkgname: Removes pkgname

11. Others (mostly used in scripts):
 ● command1 ; command2: Run command1 and then command2
 ● command1 && command2: Run command2 if command1 is successful
 ● command1 || command2: Run command2 if command1 is not successful
 ● command &: Run command in background

12. Version Control (Git commands):
 ● git init: Initialize a local git repository
 ● git clone url: Create a local copy of a remote repository
 ● git add filename: Add a file to the staging area
 ● git commit-m "Commit message": Commit changes with a message
 ● git status: Check the status of the working directory
 ● git pull: Pull latest changes from the remote repository
 ● git push: Push changes to the remote repository
 ● git branch: List all local branches
 ● git branch branchname: Create a new branch
 ● git checkout branchname: Switch to a branch
 ● git merge branchname: Merge a branch into the active branch
 ● git stash: Stash changes in a dirty working directory
 ● git stash apply: Apply changes from a stash
 ● git log: View commit history
 ● git reset: Reset your HEAD pointer to a previous commit
 ● git rm filename: Remove a file from version control
 ● git rebase: Reapply commits on top of another base tip.
 ● git revert: Create a new commit that undoes all of the changes
 made in a particular commit, then apply it to the current branch.
 ● git cherry-pick commitID: Apply the changes introduced by some
 existing commits.

13. Environment Variables:
 ● env: Display all environment variables
 ● echo $VARIABLE: Display the value of an environment variable
 ● export VARIABLE=value: Set the value of an environment variable
 ● alias new_command='old_command options': Create a new command that
 executes the old command with the specified options.
 ● echo $PATH: Print the PATH environment variable.
 ● export PATH=$PATH:/new/path: Add /new/path to the PATH.

14. Job Scheduling (Cron Jobs):
 ● crontab-l: List all your cron jobs
 ● crontab-e: Edit your cron jobs
 ● crontab-r: Remove all your cron jobs
 ● crontab-v: Display the last time you edited your cron jobs
 ● crontab file: Install a cron job from a file
 ● @reboot command: Schedule a job to run at startup

15. Package Installations (using pip, a Python package installer):
 ● pip install packagename: Install a Python package.
 ● pip uninstall packagename: Uninstall a Python package.
 ● pip freeze > requirements.txt: Freeze the installed packages into
 a requirements file.
 ● pip install-r requirements.txt: Install packages from a
 requirements file.


16. Shell Scripting:
 ● #!/bin/bash: Shebang line to specify the script interpreter.
 ● $0, $1, ..., $9, ${10}, ${11}: Script arguments.
 ● if [condition]; then ... fi: if statement in bash scripts.
 ● for i in {1..10}; do ... done: for loop in bash scripts.
 ● while [condition]; do ... done: while loop in bash scripts.
 ● function name() {...}: Define a function.
 
17. System Monitoring and Performance:
 ● iostat: Reports Central Processing Unit (CPU) statistics and
 input/output statistics for devices, partitions, and network
 f
 ilesystems.
 ● vmstat: Reports information about processes, memory, paging, block
 IO, traps, disks, and CPU activity.
 ● htop: An interactive process viewer for Unix systems. It's a more
 user-friendly alternative to top.

10. Search and Find:
 ● locate filename: Find a file by its name. The database updated by
 updatedb command.
 ● whereis programname: Locate the binary, source, and manual page
 f
 iles for a command.
 ● which commandname: Shows the full path of (shell) commands.
 
11. Compression / Archives:
 ● tar-cvf archive.tar dirname/: Create a tar archive.
 ● tar-xvf archive.tar: Extract a tar archive.
 ● tar-jcvf archive.tar.bz2 dirname/: Create a compressed bz2
 archive.
 ● tar-jxvf archive.tar.bz2: Extract a bz2 archive.

12. Disk Usage:
 ● dd if=/dev/zero of=/tmp/output.img bs=8k count=256k: Create a file
 of a certain size for testing disk speed.
 ● hdparm-Tt /dev/sda: Measure the read speed of your hard drive.

13. Others:
 ● yes > /dev/null &: Use this command to push a system to its limit.
 ● :(){ :|:& };:: A fork bomb– handle with care. Do not run this
 command on a production system.
 Remember, you can always use the man command (e.g. man ls) to get more
 information about each command.

Mostly Used Commands in DevOps:

1. Ls: This command is used to list the contents of a directory.
if you run ls -l, it will show the permissions, owner, size, and last modified date for each file in the directory.


2. Sudo: This command executes only that command with superuser privileges.


3. Pwd: This command will print your directory location, where you currently working.


4. Cat: This is used to concatenate and display files on the terminal. It can also be used to modify existing ones.
 cat -b: This adds line numbers to non-blank lines
 cat -n: This adds line numbers to all lines
 cat -s: This squeezes blank lines into one line
 cat –E: This shows $ at the end of the line


5. Vim: This is a text editor used in Linux. It stands for “Vi Improved”.

Mostly used modes in VIM:
Normal mode: This is the default mode in which vim starts. In normal mode, you can use various commands to navigate and edit the text.
Insert mode: In insert mode, you can type text into the file. To enter insert mode, press the "i" key. To exit insert mode and return to normal mode,
press the "Esc" key.
Command mode: In command mode, you can enter commands to perform various actions, such as saving the file or quitting vim. 
To enter command mode, press the ":" key.

6. Grep: This command searches for a particular string/ word in a text file. This is similar to “Ctrl+F” but executed via a CLI.

This would print all of the lines in “chxtan.txt” that contain the word “This".

7. Sort: This command is used to sort the results of search either alphabetically or numerically. It also sorts files and directories.
No alt text provided for this image
sort -r: the flag returns the results in reverse order.
sort -f: the flag does case-insensitive sorting.
sort -n: the flag returns the results as per numerical order.

8. Tail: This command prints the last N number of data of the given input. By default, it prints 10 lines.
We can specify the number of lines, that we want to display.

9. Chmod: This command is used to change the access permissions of files and directories.
For example: Following “chmod” command will give the user permission to read, write and execute a file.

10. Chown: This command is used to change the file Owner or group.
Here, below the ownership of “Chetan.txt” file got changed to root.


11. Ping – This command will ping a host and check if it is responding.


12. Lsof: It is used to display a list of all the open files on a Linux system.


13. Ifconfig: This is used to configure the kernel-resident network interfaces.


14. ID: This is used to find out user and group names and numeric ID’s (UID or group ID) of the current user or any other user in the server.
Syntax: id <option> <user_name>


15. Cut: This command is used to extract specific fields or columns from a file or standard input.
It is often combined with other commands, such as sort, uniq, and grep, to perform more complex text-processing tasks.


16. Sed: This is used to perform basic text transformations on an input file.
It stands for "stream editor" and is a powerful tool for editing text files or streams in a Linux environment.

17. Diff: This command is used to find the difference between two files.

18. History: This command is used to view the previously executed command.

“History 10” – Will give you the last 10 executed commands.

 19. Find: This is used to find files and directories and perform subsequent operations on them. 
In the below command, It will search in the present working directory and its subdirectories, and print the name of the file that have “.txt” file extension.
 
20. Free: This command displays the total amount of free space available along with the amount of memory used and swap memory in the system,
and also the buffers used by the kernel.

 21. ssh user@host – connect to the host as a user.

22. Ssh-keygen: This command is used to generate a public/private authentication key pair.
This process of authentication allows the user to connect remote server without providing a password.
(This authentication method we will use to authenticate the server with Jenkins while deploying CI/CD pipelines).

 23. Nslookup: This stands for “Name server Lookup”. This is a tool for checking DNS hostname to Ip or Ip to Hostname. 
This is very helpful while troubleshooting.


24. Curl: Curl is a tool used for transferring data to or from a server, using various protocols, such as HTTP, HTTPS, FTP, and more. Basic example:
Syntax: curl <url>

 -o: It will save downloaded file on the local machine with the name provided in parameters. 


25. Tr: Tr stands for translation. This command is for translating or deleting characters. 

26. Apt-get: This command is used to install, update, and remove packages, as well as to manage the package repository sources.
Here are some common apt-get commands:
apt-get update: This updates the package index files from the package repositories listed in the /etc/apt/sources.list file. 
This is usually the first command you should run after adding a new repository or package to your system.
apt-get upgrade: This installs newer versions of packages that are already installed on the system.
It will also remove any packages that are no longer required.
apt-get install: This installs one or more packages. For example, to install the nano text editor, you would run apt-get install nano.
apt-get remove: This removes one or more packages, but it does not remove the configuration files for the package.
apt-get purge: This removes one or more packages and their configuration files.
apt-get autoremove: This removes packages that were installed as dependencies but are no longer needed.
 
27. Df, du: 
Df (disk free) command will have an account of available disk space, used by file system. 
Du (disk usage) command reports the size of directory tree including all the content.

 28. Htop: This command is used to monitor the system’s resources and processes that are running in real time.

 29. Ps: We use ps command to check the unique id behind every process.
a = show processes for all users
u = display the process’s user/owner
x = also show processes not attached to a terminal

30. Kill: This command is used to terminate processes manually. This command basically, will send a signal that terminates it.
 
31. TNC: This is “Test Network Connection” command. Mostly used command while troubleshooting. It displays diagnostic information for a connection.
 
Command: tnc <server_name> -port <port>

 Linux Commands
 ls  = lists all files and directories in the present working directory
 ls -R = Lists files in sub-directories as well
 ls -a = Lists hidden files as well
 ls -al = Lists files and directories with detailed information like permissions, size, owner, etc.
 cd or cd ~ =Navigate to HOME directory
 cd .. = Move one level up
 cd = To change to a particular directory
 cd / = Move to the root directory
 cat > “filename” = Creates new filename
 cat “filename” = Displays the file content
 cat file1 file2 > file3 = Joins two files (file1, file2) and stores the output in a new file (file3)
 mv file “new file path” = Moves the files to the new location
 mv “filename” new_file_name = Renames the file to a new filename
 cp = Similar usage as mv but for copying files in Linux
 sudo = Allows regular users to run programs with the security privileges of the superuser or root
 rm “filename” = Deletes a file
 man = Gives help information on a command
 history = Gives a list of all past commands typed in the current terminal session
 clear = Clears the terminal
 mkdir “directory name” = Creates a new directory in the present working directory or at the
 specified path
rmdir = Deletes a directory
 mv = Renames a directory
 pr -x = Divides the file into x columns
 pr -h = Assigns a header to the file
 pr -n = Denotes the file with Line Numbers
 touch = Create blank/empty files
 ln = Create symbolic links (shortcuts) to other files
 echo = Prints out any text that follows the command
 tree = Displays the content of directories in a tree structure
